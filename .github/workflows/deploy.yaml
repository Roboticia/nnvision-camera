name: CI - Build, Push and Deploy Docker Image

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]
  release:
    types: [published]

jobs:
  check_files_changed:
    name: "Check changes"
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      deploy_changed: ${{ steps.changed-files-specific.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Checkout as many commits as needed for the diff
          fetch-depth: 0
      - name: Check if any file in deploy directory has changed
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            deploy/**
            src/**

  prepare:
    name: "Prepare code"
    runs-on: ubuntu-latest
    needs: check_files_changed
    if: needs.check_files_changed.outputs.deploy_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set variables for push
        if: github.event_name == 'push'
        run: |
          echo "DEPLOY_ENV=re7" > version.env
          echo "IMAGE_TAG=${{ github.sha }}" >> version.env
      - name: Set variables for pull request
        if: github.event_name == 'pull_request'
        run: |
          echo "DEPLOY_ENV=re7" > version.env
          echo "IMAGE_TAG=${{ github.sha }}" >> version.env
      - name: Set variables for release
        if: github.event_name == 'release'
        run: |
          echo "DEPLOY_ENV=prod" > version.env
          echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> version.env
      - name: Upload code as artifact
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: |
            .

  build-and-push:
    name: "Make Docker images"
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Set IMAGE_TAG from version.env
        id: set-image-tag
        run: |
          source version.env
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      - name: Login to Scaleway container Registry
        uses: docker/login-action@v2
        with:
          registry: rg.fr-par.scw.cloud
          username: nologin
          password: ${{ secrets.SCW_SECRET_KEY }}
      - name: Build Docker image
        run: docker build -f deploy/Dockerfile -t rg.fr-par.scw.cloud/protecia/nnvision-camera:${{ env.IMAGE_TAG }} .
      - name: Push Docker image
        run: docker push rg.fr-par.scw.cloud/protecia/nnvision-camera:${{ env.IMAGE_TAG }}